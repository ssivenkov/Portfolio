// fonts
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Hind+Siliguri:wght@400;500;600&display=swap');

// selected content
*::selection {
    color: #fff;
    background-color: var(--primary);
    text-shadow: none;
}

// colors
* {
    --primary_light: #c8a6ff;
    --primary: #813afe;
    --primary_medium: #5925b4;
    --primary_half-medium: #23085f;
    --primary_dark: #150439;
    --background_light: #252525;
    --background: #0E1111;
    --background_dark: #000;
    --text: #fff;
    --misc: #fff;
}

// mixins
@mixin no-select {
    -ms-user-select: none;
    -webkit-touch-callout: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    user-select: none;
}

$maxWidth: 1920;
@mixin adaptive-value($property, $maxWidthContainer, $startSize, $minSize, $unit, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        // only if is less container
        #{$property}: $startSize + $unit;
        @media (max-width: #{$maxWidthContainer + $unit}) {
            #{$property}: calc(#{$minSize + $unit} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type==2 {
        // only if is more container
        #{$property}: $startSize + $unit;
        @media (min-width: #{$maxWidthContainer + $unit}) {
            #{$property}: calc(#{$minSize + $unit} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        // always
        #{$property}: calc(#{$minSize + $unit} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

// hide default background color on click
* {
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
    -webkit-tap-highlight-color: transparent;
}